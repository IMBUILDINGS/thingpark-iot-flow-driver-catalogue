var driver=function(e){var n={};function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}return t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(o,r,function(n){return e[n]}.bind(null,r));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){const o=t(1),r={CheckInConfirmed:{func:(e,n,t)=>{e.version=n.version,e.idddata=n.idddata}},EmptyReport:{func:(e,n,t)=>{}},BatteryReport:{func:(e,n,t)=>{e.battery=n.value}},IRProximityReport:{func:(e,n,t)=>{e.proximity=n.value}},PresenceReport:{func:(e,n,t)=>{e.presence=n.value}},IRCloseProximityReport:{func:(e,n,t)=>{e.closeProximity=n.value}},CloseProximityAlarm:{func:(e,n,t)=>{e.closeProximityAlarm=n.value}},DisinfectAlarm:{func:(e,n,t)=>{e.disinfectAlarm=n.value}},statusCode:{func:(e,n,t)=>{e.statusCode=n.value,e.statusText=n.status}}},i={historyStart:!0};n.decodeUplink=function(e){const n=e.bytes,t=e.fPort;let r=null;switch(t){case 1:case 11:r=o.decodeLoraStripsUplink(t,n);break;case 2:throw new Error("This decoder does not support history data.");default:throw new Error("This decoder will only decode data points and status codes, not metadata or mac commands.")}return r[0]},n.decodeDownlink=function(e){const n=e.bytes,t=e.fPort;return function(e){let n={};for(const t in e)e[t],e[t].hasOwnProperty("value")&&(n[t]=e[t].value);return e.hasOwnProperty("cmd")&&e.cmd.hasOwnProperty("name")&&(n.cmd=e.cmd.name),n}(o.decodeLoraStripsDownlink(t,n))},n.encodeDownlink=function(e){return function(e){let n={};for(const t in e)"cmd"==t?n.cmd={name:e.cmd}:n[t]={value:e[t]};const t=o.encodeLoraStripsDownlink(n),r=Buffer.from(t.data,"hex");var i=[];for(let e=0;e<r.length;++e)i.push(r.readUInt8(e));return{fPort:t.port,bytes:i}}(e)},n.extractPoints=function(e){let n={},t=e.message;const o=new Date(e.time);for(const e in t){if(!r.hasOwnProperty(e)){if(i.hasOwnProperty(e))continue;throw new Error("The message contained '"+e+"' which is currently not supported for point transformation.")}r[e].func(n,t[e],o)}return n}},function(e,n,t){const o=e=>e.toString(10),r=e=>"Ox"+e.toString(16);function i(e,n){const t=2*n;var o=Number(e).toString(16);for(o.length>t&&(o=o.substring(o.length-t));o.length<t;)o="0"+o;return o}const d=e=>{return i(parseInt(e.substring(2),16),4)},s=e=>i(e,4),a={getsize:(e,n)=>1,decode:(e,n)=>e[n]},c={getsize:(e,n)=>a.getsize(e,n),decode:(e,n)=>a.decode(e,n)/2},l={getsize:(e,n)=>2,decode:(e,n)=>(e[n++]<<8)+e[n]},u=(e,n)=>2,m=(e,n)=>(128&e[n]?-65536:0)|e[n++]<<8|e[n++],p={getsize:(e,n)=>u(e,n),decode:(e,n)=>m(e,n)/10},f={getsize:(e,n)=>1,decode:(e,n)=>({high:!!(1&e[n]),low:!!(2&e[n])})},g={getsize:(e,n)=>1,decode:(e,n)=>!!e[n]},E={getsize:(e,n)=>c.getsize(e,n)+p.getsize(e,n+1),decode:(e,n)=>({humidity:{value:c.decode(e,n),unit:"%"},temp:{value:p.decode(e,n+1),unit:"C"}})},T={getsize:(e,n)=>3,decode:(e,n)=>({door:{value:g.decode(e,n),unit:"bool"},temp:{value:p.decode(e,n+1),unit:"C"}})},h={BUTTON:2,BATTERY:4,TEMP:8,HUMID:16,LUX:32,DOOR:64,TAMPER:128,CAP:256,PROX:512},R={CheckInConfirmed:{reportbit:0,sensors:h.BUTTON,coding:{getsize:(e,n)=>8,decode:(e,n)=>({version:i((e[n++]<<24)+(e[n++]<<16)+(e[n++]<<8)+e[n++],4),idddata:i((e[n++]<<24)+(e[n++]<<16)+(e[n++]<<8)+e[n++],4)})},channel:110,unit:""},EmptyReport:{reportbit:-1,sensors:h.BUTTON,coding:{getsize:(e,n)=>0,decode:(e,n)=>0},channel:0,unit:""},BatteryReport:{reportbit:1,sensors:h.BATTERY,coding:a,channel:1,unit:"%"},TempReport:{reportbit:2,sensors:h.TEMP,coding:p,channel:2,unit:"C"},TempAlarm:{reportbit:3,sensors:h.TEMP,coding:f,channel:3,unit:""},AverageTempReport:{reportbit:4,sensors:h.TEMP,coding:p,channel:4,unit:"C"},AverageTempAlarm:{reportbit:5,sensors:h.TEMP,coding:f,channel:5,unit:""},HumidityReport:{reportbit:6,sensors:h.HUMID,coding:c,channel:6,unit:"%"},LuxReport:{reportbit:7,sensors:h.LUX,coding:l,channel:7,unit:"Lux"},LuxReport2:{reportbit:8,sensors:h.LUX,coding:l,channel:8,unit:"Lux"},DoorReport:{reportbit:9,sensors:h.DOOR,coding:g,channel:9,unit:""},DoorAlarm:{reportbit:10,sensors:h.DOOR,coding:g,channel:10,unit:""},TamperReport:{reportbit:11,sensors:h.TAMPER,coding:g,channel:11,unit:""},TamperAlarm:{reportbit:12,sensors:h.TAMPER,coding:g,channel:12,unit:""},FloodReport:{reportbit:13,sensors:h.CAP,coding:a,channel:13,unit:""},FloodAlarm:{reportbit:14,sensors:h.CAP,coding:g,channel:14,unit:""},FoilAlarm:{reportbit:15,sensors:h.CAP,coding:g,channel:15,unit:""},TempHumReport:{reportbit:16,sensors:h.TEMP|h.HUMID,coding:E,channel:80,unit:""},AvgTempHumReport:{reportbit:17,sensors:h.TEMP|h.HUMID,coding:E,channel:81,unit:""},TempDoorReport:{reportbit:18,sensors:h.TEMP|h.DOOR,coding:T,channel:82,unit:""},CapacitanceFloodReport:{reportbit:19,sensors:h.CAP,coding:l,channel:112,unit:""},CapacitancePadReport:{reportbit:20,sensors:h.CAP,coding:l,channel:113,unit:""},CapacitanceEndReport:{reportbit:21,sensors:h.CAP,coding:l,channel:114,unit:""},UserSwitch1Alarm:{reportbit:22,sensors:h.TAMPER,coding:g,channel:16,unit:""},DoorCountReport:{reportbit:23,sensors:h.DOOR,coding:l,channel:17,unit:""},PresenceReport:{reportbit:24,sensors:h.PROX,coding:g,channel:18,unit:""},IRProximityReport:{reportbit:25,sensors:h.PROX,coding:l,channel:19,unit:""},IRCloseProximityReport:{reportbit:26,sensors:h.PROX,coding:l,channel:20,unit:""},CloseProximityAlarm:{reportbit:27,sensors:h.PROX,coding:g,channel:21,unit:""},DisinfectAlarm:{reportbit:28,sensors:h.PROX,coding:a,channel:22,unit:""}},O=e=>{let n="";for(var t in R)e&1<<R[t].reportbit&&(""!=n&&(n+="|"),n+=t);return n},_=e=>{const n=e.split("|");let t=0;return n.map(e=>{if(e.length>0){if(!R.hasOwnProperty(e))throw{message:"Invalid report id: "+e};t|=1<<R[e].reportbit}}),i(t,4)},P={INVERT_DOOR:1,HIGH_POWER_PROXIMITY:2},L={NONE:{id:0,unit:"none",decode:r,encode:d,name:"None"},VERSION:{id:1,unit:"version",decode:r,encode:d,name:"Version"},BASE_POLL_INTERVAL:{id:2,unit:"ms",decode:o,encode:s,name:"Base poll interval"},REPORTS_ENABLED:{id:3,unit:"reports",decode:O,encode:_,name:"Reports enabled"},TEMP_POLL_INTERVAL:{id:4,unit:"s",decode:o,encode:s,name:"Temp poll interval"},TEMP_SEND_IMMEDIATELY_TRESHOLD:{id:5,unit:"mC",decode:o,encode:s,name:"Temp send immediately treshold"},TEMP_SEND_THROTTLED_TRESHOLD:{id:6,unit:"mC",decode:o,encode:s,name:"Temp send throttled treshold"},TEMP_SEND_THROTTLED_TIME:{id:7,unit:"s",decode:o,encode:s,name:"Temp send throttled time"},TEMP_LOW_ALARM:{id:8,unit:"mC",decode:o,encode:s,name:"Temp low alarm"},TEMP_HIGH_ALARM:{id:9,unit:"mC",decode:o,encode:s,name:"Temp high alarm"},TEMP_ALARM_HYSTERESIS:{id:10,unit:"mC",decode:o,encode:s,name:"Temp alarm hysteresis"},AVGTEMP_AVERAGE_TIME:{id:11,unit:"s",decode:o,encode:s,name:"Average temp average time"},AVGTEMP_MIN_TEMP:{id:12,unit:"mC",decode:o,encode:s,name:"Average temp min temp"},AVGTEMP_SEND_IMMEDIATELY_TRESHOLD:{id:13,unit:"mC",decode:o,encode:s,name:"Averate temp send immediately treshold"},AVGTEMP_LOW_ALARM:{id:14,unit:"mC",decode:o,encode:s,name:"Average temp low alarm"},AVGTEMP_HIGH_ALARM:{id:15,unit:"mC",decode:o,encode:s,name:"Average temp high alarm"},AVGTEMP_ALARM_HYSTERESIS:{id:16,unit:"mC",decode:o,encode:s,name:"Average temp hysteresis"},HUMIDITY_POLL_INTERVAL:{id:17,unit:"s",decode:o,encode:s,name:"Humidity poll interval"},HUMIDITY_TRESHOLD:{id:18,unit:"%",decode:o,encode:s,name:"Humidity treshold"},LUX_POLL_INTERVAL:{id:19,unit:"s",decode:o,encode:s,name:"Lux poll interval"},LUX_HIGH_LEVEL_1:{id:20,unit:"Lux",decode:o,encode:s,name:"Lux high level 1"},LUX_LOW_LEVEL_1:{id:21,unit:"Lux",decode:o,encode:s,name:"Lux low level 1"},LUX_HIGH_LEVEL_2:{id:22,unit:"Lux",decode:o,encode:s,name:"Lux high level 2"},LUX_LOW_LEVEL_2:{id:23,unit:"Lux",decode:o,encode:s,name:"Lux low level 2"},FLOOD_POLL_INTERVAL:{id:24,unit:"s",decode:o,encode:s,name:"Flood poll interval"},FLOOD_CAPACITANCE_MIN:{id:25,unit:"capacitance",decode:o,encode:s,name:"Flood capacitance min"},FLOOD_CAPACITANCE_MAX:{id:26,unit:"capacitance",decode:o,encode:s,name:"Flood capacitance max"},FLOOD_REPORT_INTERVAL:{id:27,unit:"s",decode:o,encode:s,name:"Flood report interval"},FLOOD_ALARM_TRESHOLD:{id:28,unit:"%",decode:o,encode:s,name:"Flood alarm treshold"},FLOOD_ALARM_HYSTERESIS:{id:29,unit:"%",decode:o,encode:s,name:"Flood alarm hysteresis"},SETTINGS_FOIL_TRESHOLD:{id:30,unit:"capacitance",decode:o,encode:s,name:"Foil treshold"},CAPACITANCE_FLOOD_REPORT_INTERVAL:{id:31,unit:"s",decode:o,encode:s,name:"Cap flood report interval"},CAPACITANCE_PAD_REPORT_INTERVAL:{id:32,unit:"s",decode:o,encode:s,name:"Cap pad report interval"},CAPACITANCE_END_REPORT_INTERVAL:{id:33,unit:"s",decode:o,encode:s,name:"Cap end report interval"},SENSORS_COMBINED_1:{id:34,unit:"reports",decode:O,encode:_,name:"Combined sensors 1"},SENSORS_COMBINED_2:{id:35,unit:"reports",decode:O,encode:_,name:"Combined sensors 2"},SENSORS_COMBINED_3:{id:36,unit:"reports",decode:O,encode:_,name:"Combined sensors 3"},HISTORY_REPORTS:{id:37,unit:"reports",decode:O,encode:_,name:"History reports"},DEMO_TRYJOIN_INTERVAL:{id:38,unit:"min",decode:o,encode:s,name:"Try join interval"},LUX_PLASTIC_COMP:{id:39,unit:"%",decode:o,encode:s,name:"Lux plastic comp"},LORA_DATA_RATE:{id:40,unit:"datarate",decode:o,encode:s,name:"Lora data rate"},LED_LEVEL:{id:41,unit:"ledlevel",decode:o,encode:s,name:"Led level"},LINK_CHECK_INTERVAL:{id:42,unit:"unknown",decode:o,encode:s,name:"Link check interval"},RESEND_RESET_TIME:{id:43,unit:"unknown",decode:o,encode:s,name:"Resend reset time"},LUX_LOW_CUTOFF:{id:44,unit:"lux",decode:o,encode:s,name:"Lux low cutoff"},DOOR_COUNT_REPORT_INTERVAL:{id:45,unit:"s",decode:o,encode:s,name:"Door count interval"},IR_PROXIMITY_REPORT_INTERVAL:{id:46,unit:"s",decode:o,encode:s,name:"IR Proximity report interval"},PRESENCE_POLL_INTERVAL:{id:47,unit:"s",decode:o,encode:s,name:"Presence poll interval"},PRESENCE_TRESHOLD:{id:48,unit:"reflection",decode:o,encode:s,name:"Presence treshold"},PRESENCE_TIMEOUT:{id:49,unit:"s",decode:o,encode:s,name:"Presence timeout"},SENSOR_CONFIGURATION:{id:50,unit:"config",decode:e=>{let n="";for(let t in P)e&P[t]&&(""!=n&&(n+="|"),n+=t);return n},encode:e=>{const n=e.split("|");let t=0;return n.map(e=>{for(let n in P)e==n&&(t|=P[n])}),i(t,4)},name:"Sensor configuration"}},A={DEFAULT:{id:0,name:"Default"},COMFORT_TEMP:{id:1,name:"Comfort Temp"},COMFORT_TEMP_LUX:{id:2,name:"Comfort Temp and Lux"},COMFORT_AVGTEMP:{id:3,name:"Comfort Average Temp"},GUARD_STD:{id:4,name:"Guard Standard"},DRIP_STD:{id:5,name:"Drip Standard"},PRESENCE_OFFICE:{id:6,name:"Presence Office"},PRESENCE_PUBLIC:{id:7,name:"Presence Public"},DISINFECT_OFFICE:{id:8,name:"Disinfect Office"},CLOSE_PROXIMITY_SLOW:{id:9,name:"Close Proximity Slow"},ALL_CAP_SENSORS_RAW:{id:240,name:"All cap sensors raw"}};function I(e){for(var n in L)if(L[n].id==e)return n;return null}const w={SET_SETTING:{port:11,cmd:1,decode:function(e,n){var t=new Object;if(n==e.end)throw{message:"No settings to set"};for(;n<e.length;){if(e.length<n+5)throw{message:"Set settings: Bad data size"};const r=e[n++],i=(e[n++]<<24)+(e[n++]<<16)+(e[n++]<<8)+e[n++];let d=!1;for(var o in L)L[o].id==r&&(d=!0,t[o]={id:r,name:L[o].name,unit:L[o].unit,value:L[o].decode(i)});if(0==d)throw{message:"Unknown setting: "+r}}return t},encode:function(e){var n="";for(var t in e)L.hasOwnProperty(t)&&(n+=i(L[t].id,1)+L[t].encode(e[t].value));return n},name:"Set setting"},GET_SETTING:{port:11,cmd:2,decode:function(e,n){let t=new Object;const o=e[n++],r=I(o);if(null==r)throw{message:"Get settings: Unknown setting "+o};return t[r]={id:o,name:r,unit:L[r].unit},t},encode:function(e){let n="";for(var t in e)for(var o in L)if(t==o){n+=i(L[o].id,1);continue}return n},name:"Get setting"},GET_HISTORY:{port:2,cmd:1,decode:function(e,n){if(5!=e.length)throw{message:"Get history command: Bad package size"};return{first:(e[n++]<<8)+e[n++],last:(e[n++]<<8)+e[n++],unit:"History sequence number"}},encode:function(e){if(0==e.hasOwnProperty("first")||0==e.hasOwnProperty("last"))throw{message:"Expected properties first and last missing"};return i(e.first,2)+i(e.last,2)},name:"Get history"},SET_PROFILE:{port:10,cmd:1,decode:function(e,n){if(2!=e.length)throw{message:"Set profile command: Bad package size"};const t=e[n++];for(var o in A)if(A[o].id==t)return{profile:A[o].name,id:o};throw{message:"Unknown profile "+t}},encode:function(e){if(0==e.hasOwnProperty("id"))throw{message:"Profile id is missing"};const n=e.id;if(0==A.hasOwnProperty(n))throw{message:"Unknown profile "+n};return i(A[n].id,1)},name:"Set profile"},CMD_UNJOIN:{port:10,cmd:8,decode:function(e,n){if(3!=e.length)throw{message:"Unjoin command: Bad package size"};return{minutes:(e[n++]<<8)+e[n++]}},encode:function(e){if(0==e.hasOwnProperty("minutes"))throw{message:"Unjoin requires minutes field"};return i(e.minutes,2)},name:"Unjoin"},CMD_ENDCOMP:{port:224,cmd:6,decode:function(e,n){if(1!=e.length)throw{message:"End compliance test: Bad package size"};return{}},encode:function(e){return""},name:"End compliance test"}},C=e=>{for(let n in R)if(R[n].channel==e)return n;throw{message:"Unknown channel: "+e}},S=(e,n,t,o)=>{const r=e.coding.decode(n,t);let i;return i="object"==typeof r?r:{value:r,unit:e.unit},null!=o&&(i.historyPosition=o),i},v=["OK","Bad setting","Bad payload length","Value not accepted","Unknown command"],D={DIRECT_PORT:{port:1,decode:e=>{if(e.length<2)throw"message: Too few bytes";let n=0;const t=e[n++]<<8|e[n++];let o={};o.historyStart=t;let r=t;for(;n<e.length;){let t=null;128&e[n]&&(t=r--);const i=C(127&e[n++]),d=R[i],s=n+d.coding.getsize(e,n);if(s>e.length)throw{message:"Incomplete data"};o[i]=S(d,e,n,t),n=s}return[o]}},HISTORY_PORT:{port:2,decode:e=>{let n=0,t=[],o=(new Date).getTime();if(e.length<2)throw{message:"Too small history package"};let r=e[n++]<<8|e[n++];for(;n<e.length-5;){let i=1e3*(e[n++]<<24|e[n++]<<16|e[n++]<<8|e[n++]);const d=C(127&e[n++]),s=R[d],a=n+s.coding.getsize(e,n);if(a>e.length)throw{message:"Incomplete data"};let c={};c.timestamp=o-i,c[s]=S(s,e,n,r++),t.push(c),n=a}if(n!=e.length)throw{message:"Invalid history package size"};return t}},SETTINGS_PORT:{port:11,decode:e=>{let n=0,t=[];(new Date).getTime();if(e.length<1)throw{message:"To small settings package"};for(;n<e.length;){let o=e[n++];if(2==o){if(n+5<e.length)throw{message:"Incomplete settings data"};const o=e[n++],r=I(o);if(null==r)throw{message:"Unknown setting id "+o};let i={};i[r]={id:o,value:e[n++]<<24|e[n++]<<16|e[n++]<<8|e[n++],unit:L[r].unit},t.push(i)}else{if(3!=o)throw{message:"Unknown settings uplink format: "+o};{if(n+1!=e.length)throw{message:"Bad status code message length"};const o=e[n++];if(o>=v.length)throw{message:"Unknown status code: "+o};decoded={},decoded.statusCode={value:o,status:v[o]},t.push(decoded)}}}return t}}},y=(e,n)=>{for(let t in D)if(D[t].port==e)return D[t].decode(n);throw"No function for decoding uplinks on port "+e},M=(e,n)=>{if(null==n||n.length<1)throw{message:"Not enough data"};const t=n[0];for(var o in w)if(w[o].port==e&&w[o].cmd==t){let e=w[o].decode(n,1);return e.cmd=w[o],e}throw{message:"Unrecognized downlink"}},N={d:{name:"downlink",func:(e,n)=>M(e,n)},u:{name:"uplink",func:(e,n)=>y(e,n)}};n.decodeLoraStripsDownlink=M,n.decodeLoraStripsUplink=y,n.encodeLoraStripsDownlink=e=>{if(null==e||0==e.hasOwnProperty("cmd"))throw{message:"Bad object for encode, null or missing cmd."};const n=e.cmd.name;for(var t in w)if(n==w[t].name)return{data:i(w[t].cmd,1)+w[t].encode(e),port:w[t].port};throw{message:"Unknown command: "+n}},n.commandLine=function(){let e=null;try{e=t(2)}catch(e){console.log(e)}!function e(n){n.question("Select mode ("+Object.keys(N).map(e=>e+"="+N[e].name)+"): ",t=>{if(!N[t])return console.log("** Unknown mode: "+t),void e(n);const o=N[t].func,r=N[t].name;n.question("Enter "+r+" port (decimal): ",t=>{t=Number(t),n.question("Enter "+r+" (hex format): ",r=>{try{let e=r.replace(/\s/g,""),n=Buffer.from(e,"hex"),i=o(t,n);console.log(JSON.stringify(i))}catch(e){console.log(e)}e(n)})})})}(e.createInterface({input:process.stdin,output:process.stdout}))}},function(e,n){e.exports=require("readline")}]);