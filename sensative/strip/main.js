var driver=function(e){var n={};function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}return t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(o,r,function(n){return e[n]}.bind(null,r));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n){const t=e=>e.toString(10),o=e=>"Ox"+e.toString(16);function r(e,n){const t=2*n;var o=Number(e).toString(16);for(o.length>t&&(o=o.substring(o.length-t));o.length<t;)o="0"+o;return o}const i=e=>{return r(parseInt(e.substring(2),16),4)},d=e=>r(e,4),a={getsize:(e,n)=>1,decode:(e,n)=>e[n]},s={getsize:(e,n)=>a.getsize(e,n),decode:(e,n)=>a.decode(e,n)/2},c={getsize:(e,n)=>2,decode:(e,n)=>(e[n++]<<8)+e[n]},l=(e,n)=>2,u=(e,n)=>(128&e[n]?-65536:0)|e[n++]<<8|e[n++],m={getsize:(e,n)=>l(e,n),decode:(e,n)=>u(e,n)/10},p={getsize:(e,n)=>1,decode:(e,n)=>({high:!!(1&e[n]),low:!!(2&e[n])})},g={getsize:(e,n)=>1,decode:(e,n)=>!!e[n]},f={getsize:(e,n)=>s.getsize(e,n)+m.getsize(e,n+1),decode:(e,n)=>({humidity:{value:s.decode(e,n),unit:"%"},temp:{value:m.decode(e,n+1),unit:"C"}})},E={getsize:(e,n)=>3,decode:(e,n)=>({door:{value:g.decode(e,n),unit:"bool"},temp:{value:m.decode(e,n+1),unit:"C"}})},T={BUTTON:2,BATTERY:4,TEMP:8,HUMID:16,LUX:32,DOOR:64,TAMPER:128,CAP:256,PROX:512},h={CheckInConfirmed:{reportbit:0,sensors:T.BUTTON,coding:{getsize:(e,n)=>8,decode:(e,n)=>({version:r((e[n++]<<24)+(e[n++]<<16)+(e[n++]<<8)+e[n++],4),idddata:r((e[n++]<<24)+(e[n++]<<16)+(e[n++]<<8)+e[n++],4)})},channel:110,unit:""},EmptyReport:{reportbit:-1,sensors:T.BUTTON,coding:{getsize:(e,n)=>0,decode:(e,n)=>0},channel:0,unit:""},BatteryReport:{reportbit:1,sensors:T.BATTERY,coding:a,channel:1,unit:"%"},TempReport:{reportbit:2,sensors:T.TEMP,coding:m,channel:2,unit:"C"},TempAlarm:{reportbit:3,sensors:T.TEMP,coding:p,channel:3,unit:""},AverageTempReport:{reportbit:4,sensors:T.TEMP,coding:m,channel:4,unit:"C"},AverageTempAlarm:{reportbit:5,sensors:T.TEMP,coding:p,channel:5,unit:""},HumidityReport:{reportbit:6,sensors:T.HUMID,coding:s,channel:6,unit:"%"},LuxReport:{reportbit:7,sensors:T.LUX,coding:c,channel:7,unit:"Lux"},LuxReport2:{reportbit:8,sensors:T.LUX,coding:c,channel:8,unit:"Lux"},DoorReport:{reportbit:9,sensors:T.DOOR,coding:g,channel:9,unit:""},DoorAlarm:{reportbit:10,sensors:T.DOOR,coding:g,channel:10,unit:""},TamperReport:{reportbit:11,sensors:T.TAMPER,coding:g,channel:11,unit:""},TamperAlarm:{reportbit:12,sensors:T.TAMPER,coding:g,channel:12,unit:""},FloodReport:{reportbit:13,sensors:T.CAP,coding:a,channel:13,unit:""},FloodAlarm:{reportbit:14,sensors:T.CAP,coding:g,channel:14,unit:""},FoilAlarm:{reportbit:15,sensors:T.CAP,coding:g,channel:15,unit:""},TempHumReport:{reportbit:16,sensors:T.TEMP|T.HUMID,coding:f,channel:80,unit:""},AvgTempHumReport:{reportbit:17,sensors:T.TEMP|T.HUMID,coding:f,channel:81,unit:""},TempDoorReport:{reportbit:18,sensors:T.TEMP|T.DOOR,coding:E,channel:82,unit:""},CapacitanceFloodReport:{reportbit:19,sensors:T.CAP,coding:c,channel:112,unit:""},CapacitancePadReport:{reportbit:20,sensors:T.CAP,coding:c,channel:113,unit:""},CapacitanceEndReport:{reportbit:21,sensors:T.CAP,coding:c,channel:114,unit:""},UserSwitch1Alarm:{reportbit:22,sensors:T.TAMPER,coding:g,channel:16,unit:""},DoorCountReport:{reportbit:23,sensors:T.DOOR,coding:c,channel:17,unit:""},PresenceReport:{reportbit:24,sensors:T.PROX,coding:g,channel:18,unit:""},IRProximityReport:{reportbit:25,sensors:T.PROX,coding:c,channel:19,unit:""},IRCloseProximityReport:{reportbit:26,sensors:T.PROX,coding:c,channel:20,unit:""},CloseProximityAlarm:{reportbit:27,sensors:T.PROX,coding:g,channel:21,unit:""},DisinfectAlarm:{reportbit:28,sensors:T.PROX,coding:a,channel:22,unit:""}},R=e=>{let n="";for(var t in h)e&1<<h[t].reportbit&&(""!=n&&(n+="|"),n+=t);return n},_=e=>{const n=e.split("|");let t=0;return n.map(e=>{if(e.length>0){if(!h.hasOwnProperty(e))throw{message:"Invalid report id: "+e};t|=1<<h[e].reportbit}}),r(t,4)},O={INVERT_DOOR:1,HIGH_POWER_PROXIMITY:2},P={NONE:{id:0,unit:"none",decode:o,encode:i,name:"None"},VERSION:{id:1,unit:"version",decode:o,encode:i,name:"Version"},BASE_POLL_INTERVAL:{id:2,unit:"ms",decode:t,encode:d,name:"Base poll interval"},REPORTS_ENABLED:{id:3,unit:"reports",decode:R,encode:_,name:"Reports enabled"},TEMP_POLL_INTERVAL:{id:4,unit:"s",decode:t,encode:d,name:"Temp poll interval"},TEMP_SEND_IMMEDIATELY_TRESHOLD:{id:5,unit:"mC",decode:t,encode:d,name:"Temp send immediately treshold"},TEMP_SEND_THROTTLED_TRESHOLD:{id:6,unit:"mC",decode:t,encode:d,name:"Temp send throttled treshold"},TEMP_SEND_THROTTLED_TIME:{id:7,unit:"s",decode:t,encode:d,name:"Temp send throttled time"},TEMP_LOW_ALARM:{id:8,unit:"mC",decode:t,encode:d,name:"Temp low alarm"},TEMP_HIGH_ALARM:{id:9,unit:"mC",decode:t,encode:d,name:"Temp high alarm"},TEMP_ALARM_HYSTERESIS:{id:10,unit:"mC",decode:t,encode:d,name:"Temp alarm hysteresis"},AVGTEMP_AVERAGE_TIME:{id:11,unit:"s",decode:t,encode:d,name:"Average temp average time"},AVGTEMP_MIN_TEMP:{id:12,unit:"mC",decode:t,encode:d,name:"Average temp min temp"},AVGTEMP_SEND_IMMEDIATELY_TRESHOLD:{id:13,unit:"mC",decode:t,encode:d,name:"Averate temp send immediately treshold"},AVGTEMP_LOW_ALARM:{id:14,unit:"mC",decode:t,encode:d,name:"Average temp low alarm"},AVGTEMP_HIGH_ALARM:{id:15,unit:"mC",decode:t,encode:d,name:"Average temp high alarm"},AVGTEMP_ALARM_HYSTERESIS:{id:16,unit:"mC",decode:t,encode:d,name:"Average temp hysteresis"},HUMIDITY_POLL_INTERVAL:{id:17,unit:"s",decode:t,encode:d,name:"Humidity poll interval"},HUMIDITY_TRESHOLD:{id:18,unit:"%",decode:t,encode:d,name:"Humidity treshold"},LUX_POLL_INTERVAL:{id:19,unit:"s",decode:t,encode:d,name:"Lux poll interval"},LUX_HIGH_LEVEL_1:{id:20,unit:"Lux",decode:t,encode:d,name:"Lux high level 1"},LUX_LOW_LEVEL_1:{id:21,unit:"Lux",decode:t,encode:d,name:"Lux low level 1"},LUX_HIGH_LEVEL_2:{id:22,unit:"Lux",decode:t,encode:d,name:"Lux high level 2"},LUX_LOW_LEVEL_2:{id:23,unit:"Lux",decode:t,encode:d,name:"Lux low level 2"},FLOOD_POLL_INTERVAL:{id:24,unit:"s",decode:t,encode:d,name:"Flood poll interval"},FLOOD_CAPACITANCE_MIN:{id:25,unit:"capacitance",decode:t,encode:d,name:"Flood capacitance min"},FLOOD_CAPACITANCE_MAX:{id:26,unit:"capacitance",decode:t,encode:d,name:"Flood capacitance max"},FLOOD_REPORT_INTERVAL:{id:27,unit:"s",decode:t,encode:d,name:"Flood report interval"},FLOOD_ALARM_TRESHOLD:{id:28,unit:"%",decode:t,encode:d,name:"Flood alarm treshold"},FLOOD_ALARM_HYSTERESIS:{id:29,unit:"%",decode:t,encode:d,name:"Flood alarm hysteresis"},SETTINGS_FOIL_TRESHOLD:{id:30,unit:"capacitance",decode:t,encode:d,name:"Foil treshold"},CAPACITANCE_FLOOD_REPORT_INTERVAL:{id:31,unit:"s",decode:t,encode:d,name:"Cap flood report interval"},CAPACITANCE_PAD_REPORT_INTERVAL:{id:32,unit:"s",decode:t,encode:d,name:"Cap pad report interval"},CAPACITANCE_END_REPORT_INTERVAL:{id:33,unit:"s",decode:t,encode:d,name:"Cap end report interval"},SENSORS_COMBINED_1:{id:34,unit:"reports",decode:R,encode:_,name:"Combined sensors 1"},SENSORS_COMBINED_2:{id:35,unit:"reports",decode:R,encode:_,name:"Combined sensors 2"},SENSORS_COMBINED_3:{id:36,unit:"reports",decode:R,encode:_,name:"Combined sensors 3"},HISTORY_REPORTS:{id:37,unit:"reports",decode:R,encode:_,name:"History reports"},DEMO_TRYJOIN_INTERVAL:{id:38,unit:"min",decode:t,encode:d,name:"Try join interval"},LUX_PLASTIC_COMP:{id:39,unit:"%",decode:t,encode:d,name:"Lux plastic comp"},LORA_DATA_RATE:{id:40,unit:"datarate",decode:t,encode:d,name:"Lora data rate"},LED_LEVEL:{id:41,unit:"ledlevel",decode:t,encode:d,name:"Led level"},LINK_CHECK_INTERVAL:{id:42,unit:"unknown",decode:t,encode:d,name:"Link check interval"},RESEND_RESET_TIME:{id:43,unit:"unknown",decode:t,encode:d,name:"Resend reset time"},LUX_LOW_CUTOFF:{id:44,unit:"lux",decode:t,encode:d,name:"Lux low cutoff"},DOOR_COUNT_REPORT_INTERVAL:{id:45,unit:"s",decode:t,encode:d,name:"Door count interval"},IR_PROXIMITY_REPORT_INTERVAL:{id:46,unit:"s",decode:t,encode:d,name:"IR Proximity report interval"},PRESENCE_POLL_INTERVAL:{id:47,unit:"s",decode:t,encode:d,name:"Presence poll interval"},PRESENCE_TRESHOLD:{id:48,unit:"reflection",decode:t,encode:d,name:"Presence treshold"},PRESENCE_TIMEOUT:{id:49,unit:"s",decode:t,encode:d,name:"Presence timeout"},SENSOR_CONFIGURATION:{id:50,unit:"config",decode:e=>{let n="";for(let t in O)e&O[t]&&(""!=n&&(n+="|"),n+=t);return n},encode:e=>{const n=e.split("|");let t=0;return n.map(e=>{for(let n in O)e==n&&(t|=O[n])}),r(t,4)},name:"Sensor configuration"}},L={DEFAULT:{id:0,name:"Default"},COMFORT_TEMP:{id:1,name:"Comfort Temp"},COMFORT_TEMP_LUX:{id:2,name:"Comfort Temp and Lux"},COMFORT_AVGTEMP:{id:3,name:"Comfort Average Temp"},GUARD_STD:{id:4,name:"Guard Standard"},DRIP_STD:{id:5,name:"Drip Standard"},PRESENCE_OFFICE:{id:6,name:"Presence Office"},PRESENCE_PUBLIC:{id:7,name:"Presence Public"},DISINFECT_OFFICE:{id:8,name:"Disinfect Office"},CLOSE_PROXIMITY_SLOW:{id:9,name:"Close Proximity Slow"},ALL_CAP_SENSORS_RAW:{id:240,name:"All cap sensors raw"}};function A(e){for(var n in P)if(P[n].id==e)return n;return null}const I={SET_SETTING:{port:11,cmd:1,decode:function(e,n){var t=new Object;if(n==e.end)throw{message:"No settings to set"};for(;n<e.length;){if(e.length<n+5)throw{message:"Set settings: Bad data size"};const r=e[n++],i=(e[n++]<<24)+(e[n++]<<16)+(e[n++]<<8)+e[n++];let d=!1;for(var o in P)P[o].id==r&&(d=!0,t[o]={id:r,name:P[o].name,unit:P[o].unit,value:P[o].decode(i)});if(0==d)throw{message:"Unknown setting: "+r}}return t},encode:function(e){var n="";for(var t in e)P.hasOwnProperty(t)&&(n+=r(P[t].id,1)+P[t].encode(e[t].value));return n},name:"Set setting"},GET_SETTING:{port:11,cmd:2,decode:function(e,n){let t=new Object;const o=e[n++],r=A(o);if(null==r)throw{message:"Get settings: Unknown setting "+o};return t[r]={id:o,name:r,unit:P[r].unit},t},encode:function(e){let n="";for(var t in e)for(var o in P)if(t==o){n+=r(P[o].id,1);continue}return n},name:"Get setting"},GET_HISTORY:{port:2,cmd:1,decode:function(e,n){if(5!=e.length)throw{message:"Get history command: Bad package size"};return{first:(e[n++]<<8)+e[n++],last:(e[n++]<<8)+e[n++],unit:"History sequence number"}},encode:function(e){if(0==e.hasOwnProperty("first")||0==e.hasOwnProperty("last"))throw{message:"Expected properties first and last missing"};return r(e.first,2)+r(e.last,2)},name:"Get history"},SET_PROFILE:{port:10,cmd:1,decode:function(e,n){if(2!=e.length)throw{message:"Set profile command: Bad package size"};const t=e[n++];for(var o in L)if(L[o].id==t)return{profile:L[o].name,id:o};throw{message:"Unknown profile "+t}},encode:function(e){if(0==e.hasOwnProperty("id"))throw{message:"Profile id is missing"};const n=e.id;if(0==L.hasOwnProperty(n))throw{message:"Unknown profile "+n};return r(L[n].id,1)},name:"Set profile"},CMD_UNJOIN:{port:10,cmd:8,decode:function(e,n){if(3!=e.length)throw{message:"Unjoin command: Bad package size"};return{minutes:(e[n++]<<8)+e[n++]}},encode:function(e){if(0==e.hasOwnProperty("minutes"))throw{message:"Unjoin requires minutes field"};return r(e.minutes,2)},name:"Unjoin"},CMD_ENDCOMP:{port:224,cmd:6,decode:function(e,n){if(1!=e.length)throw{message:"End compliance test: Bad package size"};return{}},encode:function(e){return""},name:"End compliance test"}},w=e=>{for(let n in h)if(h[n].channel==e)return n;throw{message:"Unknown channel: "+e}},S=(e,n,t,o)=>{const r=e.coding.decode(n,t);let i;return i="object"==typeof r?r:{value:r,unit:e.unit},null!=o&&(i.historyPosition=o),i},C=["OK","Bad setting","Bad payload length","Value not accepted","Unknown command"],v={DIRECT_PORT:{port:1,decode:e=>{if(e.length<2)throw"message: Too few bytes";let n=0;const t=e[n++]<<8|e[n++];let o={};o.historyStart=t;let r=t;for(;n<e.length;){let t=null;128&e[n]&&(t=r--);const i=w(127&e[n++]),d=h[i],a=n+d.coding.getsize(e,n);if(a>e.length)throw{message:"Incomplete data"};o[i]=S(d,e,n,t),n=a}return[o]}},HISTORY_PORT:{port:2,decode:e=>{let n=0,t=[],o=(new Date).getTime();if(e.length<2)throw{message:"Too small history package"};let r=e[n++]<<8|e[n++];for(;n<e.length-5;){let i=1e3*(e[n++]<<24|e[n++]<<16|e[n++]<<8|e[n++]);const d=w(127&e[n++]),a=h[d],s=n+a.coding.getsize(e,n);if(s>e.length)throw{message:"Incomplete data"};let c={};c.timestamp=o-i,c[a]=S(a,e,n,r++),t.push(c),n=s}if(n!=e.length)throw{message:"Invalid history package size"};return t}},SETTINGS_PORT:{port:11,decode:e=>{let n=0,t=[];(new Date).getTime();if(e.length<1)throw{message:"To small settings package"};for(;n<e.length;){let o=e[n++];if(2==o){if(n+5<e.length)throw{message:"Incomplete settings data"};const o=e[n++],r=A(o);if(null==r)throw{message:"Unknown setting id "+o};let i={};i[r]={id:o,value:e[n++]<<24|e[n++]<<16|e[n++]<<8|e[n++],unit:P[r].unit},t.push(i)}else{if(3!=o)throw{message:"Unknown settings uplink format: "+o};{if(n+1!=e.length)throw{message:"Bad status code message length"};const o=e[n++];if(o>=C.length)throw{message:"Unknown status code: "+o};decoded={},decoded.statusCode={value:o,status:C[o]},t.push(decoded)}}}return t}}},D=(e,n)=>{for(let t in v)if(v[t].port==e)return v[t].decode(n);throw"No function for decoding uplinks on port "+e},M=(e,n)=>{if(null==n||n.length<1)throw{message:"Not enough data"};const t=n[0];for(var o in I)if(I[o].port==e&&I[o].cmd==t){let e=I[o].decode(n,1);return e.cmd=I[o],e}throw{message:"Unrecognized downlink"}},y=e=>{if(null==e||0==e.hasOwnProperty("cmd"))throw{message:"Bad object for encode, null or missing cmd."};const n=e.cmd.name;for(var t in I)if(n==I[t].name)return{data:r(I[t].cmd,1)+I[t].encode(e),port:I[t].port};throw{message:"Unknown command: "+n}};n.decodeLoraStripsDownlink=M,n.decodeLoraStripsUplink=D,n.encodeLoraStripsDownlink=y;const N={decodeLoraStripsDownlink:M,decodeLoraStripsUplink:D,encodeLoraStripsDownlink:y},b={CheckInConfirmed:{func:(e,n,t)=>{e.version=n.version,e.idddata=n.idddata}},EmptyReport:{func:(e,n,t)=>{}},BatteryReport:{func:(e,n,t)=>{e.battery=n.value}},IRProximityReport:{func:(e,n,t)=>{e.proximity=n.value}},PresenceReport:{func:(e,n,t)=>{e.presence=n.value}},IRCloseProximityReport:{func:(e,n,t)=>{e.closeProximity=n.value}},CloseProximityAlarm:{func:(e,n,t)=>{e.closeProximityAlarm=n.value}},DisinfectAlarm:{func:(e,n,t)=>{e.disinfectAlarm=n.value}},statusCode:{func:(e,n,t)=>{e.statusCode=n.value,e.statusText=n.status}}},U={historyStart:!0};n.decodeUplink=function(e){const n=e.bytes,t=e.fPort;let o=null;switch(t){case 1:case 11:o=N.decodeLoraStripsUplink(t,n);break;case 2:throw new Error("This decoder does not support history data.");default:throw new Error("This decoder will only decode data points and status codes, not metadata or mac commands.")}return o[0]},n.decodeDownlink=function(e){const n=e.bytes,t=e.fPort;return function(e){let n={};for(const t in e)e[t],e[t].hasOwnProperty("value")&&(n[t]=e[t].value);return e.hasOwnProperty("cmd")&&e.cmd.hasOwnProperty("name")&&(n.cmd=e.cmd.name),n}(N.decodeLoraStripsDownlink(t,n))},n.encodeDownlink=function(e){return function(e){let n={};for(const t in e)"cmd"==t?n.cmd={name:e.cmd}:n[t]={value:e[t]};const t=N.encodeLoraStripsDownlink(n),o=Buffer.from(t.data,"hex");var r=[];for(let e=0;e<o.length;++e)r.push(o.readUInt8(e));return{fPort:t.port,bytes:r}}(e)},n.extractPoints=function(e){let n={},t=e.message;const o=new Date(e.time);for(const e in t){if(!b.hasOwnProperty(e)){if(U.hasOwnProperty(e))continue;throw new Error("The message contained '"+e+"' which is currently not supported for point transformation.")}b[e].func(n,t[e],o)}return n}}]);